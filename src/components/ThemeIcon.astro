---

---

<button id="themeToggle" title="Toggle theme">
  <svg width="30px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
    <g class="sun">
      <path
        d="M12 17.5a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zm0 1.5a7 7 0 1 0 0-14 7 7 0 0 0 0 14zm12-7a.8.8 0 0 1-.8.8h-2.4a.8.8 0 0 1 0-1.6h2.4a.8.8 0 0 1 .8.8zM4 12a.8.8 0 0 1-.8.8H.8a.8.8 0 0 1 0-1.6h2.5a.8.8 0 0 1 .8.8zm16.5-8.5a.8.8 0 0 1 0 1l-1.8 1.8a.8.8 0 0 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM6.3 17.7a.8.8 0 0 1 0 1l-1.7 1.8a.8.8 0 1 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM12 0a.8.8 0 0 1 .8.8v2.5a.8.8 0 0 1-1.6 0V.8A.8.8 0 0 1 12 0zm0 20a.8.8 0 0 1 .8.8v2.4a.8.8 0 0 1-1.6 0v-2.4a.8.8 0 0 1 .8-.8zM3.5 3.5a.8.8 0 0 1 1 0l1.8 1.8a.8.8 0 1 1-1 1L3.5 4.6a.8.8 0 0 1 0-1zm14.2 14.2a.8.8 0 0 1 1 0l1.8 1.7a.8.8 0 0 1-1 1l-1.8-1.7a.8.8 0 0 1 0-1z"
      ></path>
    </g>
    <g class="moon">
      <path
        d="M16.5 6A10.5 10.5 0 0 1 4.7 16.4 8.5 8.5 0 1 0 16.4 4.7l.1 1.3zm-1.7-2a9 9 0 0 1 .2 2 9 9 0 0 1-11 8.8 9.4 9.4 0 0 1-.8-.3c-.4 0-.8.3-.7.7a10 10 0 0 0 .3.8 10 10 0 0 0 9.2 6 10 10 0 0 0 4-19.2 9.7 9.7 0 0 0-.9-.3c-.3-.1-.7.3-.6.7a9 9 0 0 1 .3.8z"
      ></path>
    </g>
    <g class="system">
      <path
        d="M19 3a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2h-4v1h1a1 1 0 1 1 0 2H8a1 1 0 1 1 0-2h1v-1H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2Zm-6 15h-2v1h2zm6-13H5v11h14z"
      ></path>
    </g>
  </svg>
</button>

<style>
  #themeToggle {
    border: 0;
    background: none;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 0.25rem;
    transition: background-color 0.2s;
  }

  #themeToggle:hover {
    background-color: var(--sl-color-gray-6);
  }

  .sun,
  .moon,
  .system {
    display: none;
  }

  :global([data-theme-mode="light"]) .sun {
    display: block;
    fill: black;
  }

  :global([data-theme-mode="dark"]) .moon {
    display: block;
    fill: white;
  }

  :global([data-theme-mode="auto"]:not(.dark)) .system {
    display: block;
    fill: black;
  }

  :global([data-theme-mode="auto"].dark) .system {
    display: block;
    fill: white;
  }
</style>

<script is:inline>
  const THEMES = ["light", "dark", "auto"];
  const doc = document.documentElement;

  const getPreferredTheme = () => {
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };

  const applyTheme = (theme) => {
    if (theme === "auto") {
      const preferredTheme = getPreferredTheme();
      doc.classList.toggle("dark", preferredTheme === "dark");
    } else {
      doc.classList.toggle("dark", theme === "dark");
    }
    doc.setAttribute("data-theme-mode", theme);
    localStorage.setItem("theme", theme);
  };

  const cycleTheme = () => {
    const currentTheme = localStorage.getItem("theme") || "auto";
    const currentIndex = THEMES.indexOf(currentTheme);
    const nextIndex = (currentIndex + 1) % THEMES.length;
    const nextTheme = THEMES[nextIndex];
    applyTheme(nextTheme);
  };

  // Apply initial theme on page load
  const initialTheme = localStorage.getItem("theme") || "auto";
  applyTheme(initialTheme);

  // Listen for system theme changes
  window
    .matchMedia("(prefers-color-scheme: dark)")
    .addEventListener("change", () => {
      if (localStorage.getItem("theme") === "auto") {
        applyTheme("auto");
      }
    });

  // Add click listener
  document.getElementById("themeToggle")?.addEventListener("click", cycleTheme);
</script>
