---
import BaseLayout from "../layouts/BaseLayout.astro";
import DarkVeil from "../components/Backgrounds/DarkVeil.jsx";
import GitHubCalendarComponent from "../components/GitHubCalendar.jsx";
import GitLabCalendar from "../components/GitLabCalendar.jsx";
import LoadingTransition from "../components/LoadingTransition.jsx";
import "../styles/GlassContainer.css";
import "../styles/LoadingTransition.css";

// 获取博客文章列表并计算总字数
const allPosts = await Astro.glob("../pages/posts/*.md");

// 计算所有博客文章的总字数
function countWords(text) {
  if (!text) return 0;
  // 移除 Markdown 语法和 HTML 标签
  const cleanText = text
    .replace(/```[\s\S]*?```/g, "") // 移除代码块
    .replace(/`[^`]*`/g, "") // 移除行内代码
    .replace(/!\[.*?\]\(.*?\)/g, "") // 移除图片
    .replace(/\[.*?\]\(.*?\)/g, "") // 移除链接
    .replace(/#+ /g, "") // 移除标题标记
    .replace(/\*\*(.*?)\*\*/g, "$1") // 移除粗体标记
    .replace(/\*(.*?)\*/g, "$1") // 移除斜体标记
    .replace(/~~(.*?)~~/g, "$1") // 移除删除线标记
    .replace(/---/g, "") // 移除分隔线
    .replace(/\n+/g, " ") // 将换行符替换为空格
    .replace(/\s+/g, " ") // 合并多个空格
    .trim();

  // 统计中文字符和英文单词
  const chineseChars = (cleanText.match(/[\u4e00-\u9fa5]/g) || []).length;
  const englishWords = (cleanText.match(/[a-zA-Z]+/g) || []).length;

  return chineseChars + englishWords;
}

let totalWordCount = 0;
try {
  for (const post of allPosts) {
    if (post.rawContent) {
      totalWordCount += countWords(post.rawContent());
    }
  }
} catch (error) {
  console.error("计算字数时出错:", error);
  totalWordCount = 0;
}

const pageTitle = "About Meng";

const identity = {
  firstName: "Meng",
  country: "China",
  occupation: "Uni Student",
  hobbies: ["骑行", "游泳", "追剧"],
};

const skills = ["HTML", "CSS", "JavaScript", "Python", "Matlab"];

const skillColor = "lightblue";
const fontWeight = "bold";
const textCase = "uppercase";
---

<BaseLayout pageTitle={`${pageTitle} | 我的 Astro 博客`}>
  <!-- DotGrid 背景效果 -->
  <div
    style="width: 100%; height: 100vh; position: fixed; top: 0; left: 0; z-index: 1; pointer-events: none;"
  >
    <DarkVeil client:only="preact" />
  </div>

  <!-- 页面加载过渡动画 -->
  <LoadingTransition
    client:only="preact"
    loadingText="正在加载关于页面..."
    minLoadingTime={500}
  >
    <div class="glass-container">
      <div class="header-section">
        <h1 data-i18n="about.title">{pageTitle}</h1>
        <p class="subtitle" data-i18n="about.subtitle">了解更多关于我的信息</p>
      </div>

      <div class="content-sections">
        <section class="glass-card">
          <h2 data-i18n="about.personalIntro">个人介绍</h2>
          <p data-i18n="about.personalIntroText1">
            I'm {identity.firstName}，live in {identity.country}，and I'm still
            a {identity.occupation}。
          </p>
          <p data-i18n="about.personalIntroText2">
            我正在学习 Astro
            的入门教程。这是我网站上的第二个页面，也是我自己建立的第一个页面！
          </p>
        </section>

        <section class="glass-card">
          <h2 data-i18n="about.techStack">技术栈</h2>
          <div class="skills">
            {
              skills.map((skill, index) => (
                <div
                  class="skill-item"
                  style={`animation-delay: ${index * 0.1}s`}
                >
                  {skill}
                </div>
              ))
            }
          </div>
        </section>

        <!-- Statistic 统计信息 -->
        <div class="statistics">
          <div class="stat-item">
            <div class="stat-icon">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="20"
                height="20"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
              >
                <path
                  d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"
                ></path>
                <polyline points="14,2 14,8 20,8"></polyline>
                <line x1="16" y1="13" x2="8" y2="13"></line>
                <line x1="16" y1="17" x2="8" y2="17"></line>
                <polyline points="10,9 9,9 8,9"></polyline>
              </svg>
            </div>
            <div class="stat-label" data-i18n="about.wordCount">字数</div>
            <div class="stat-value" id="site-words">—</div>
          </div>
          <div class="stat-item">
            <div class="stat-icon">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="20"
                height="20"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
              >
                <circle cx="12" cy="12" r="10"></circle>
                <polyline points="12,6 12,12 16,14"></polyline>
              </svg>
            </div>
            <div class="stat-label" data-i18n="about.onlineTime">开发时间</div>
            <div class="stat-value" id="online-time">—</div>
          </div>
          <div class="stat-item">
            <div class="stat-icon">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="20"
                height="20"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
              >
                <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                <line x1="16" y1="2" x2="16" y2="6"></line>
                <line x1="8" y1="2" x2="8" y2="6"></line>
                <line x1="3" y1="10" x2="21" y2="10"></line>
              </svg>
            </div>
            <div class="stat-label" data-i18n="about.lastUpdated">最后更新</div>
            <div class="stat-value" id="last-updated">—</div>
          </div>
        </div>

        <div class="degree-progress">
          <div class="degree-info">
            <span>今年进度</span>
            <span id="degree-percent">0%</span>
          </div>
          <div class="progress-bar">
            <div class="progress-fill" id="degree-fill" style="width:0%"></div>
          </div>
        </div>
      </div>
    </div>

    <!-- 代码贡献热力图 - 全宽展示 -->
    <div class="contributions-full-width">
      <!-- GitHub 贡献热力图 -->
      <div class="contributions-section">
        <h3>
          <svg class="platform-icon" viewBox="0 0 24 24" fill="currentColor">
            <path
              d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"
            ></path>
          </svg>
          <span data-i18n="about.githubContributions">GitHub 贡献</span>
        </h3>
        <div class="calendar-container">
          <GitHubCalendarComponent username="yuchen-06" client:load />
        </div>
      </div>

      <!-- GitLab 贡献热力图 -->
      <div class="contributions-section">
        <h3>
          <svg
            class="platform-icon"
            xmlns="http://www.w3.org/2000/svg"
            width="128"
            height="128"
            viewBox="0 0 32 32"
          >
            <path
              fill="#e53935"
              d="m29.532 13.083l-.037-.105l-3.811-10.322a1 1 0 0 0-.392-.49a.985.985 0 0 0-1.39.316a1 1 0 0 0-.122.28L21.208 10H10.792L8.22 2.762a1.004 1.004 0 0 0-1.246-.721a1 1 0 0 0-.266.124a1 1 0 0 0-.392.491L2.507 12.98l-.04.103a7.52 7.52 0 0 0 2.348 8.491l.015.012l.032.026l5.797 4.511l2.876 2.257l1.747 1.372a1.146 1.146 0 0 0 1.424 0l1.747-1.372l2.876-2.257l5.838-4.537l.016-.013a7.52 7.52 0 0 0 2.35-8.49Z"
            ></path>
            <path
              fill="#ef6c00"
              d="m29.532 13.083l-.037-.105a12.6 12.6 0 0 0-5.123 2.394l-8.367 6.57l5.327 4.181l5.839-4.537l.016-.013a7.52 7.52 0 0 0 2.345-8.49"
            ></path>
            <path
              fill="#f9a825"
              d="m10.659 26.123l2.876 2.257l1.747 1.372a1.146 1.146 0 0 0 1.424 0l1.747-1.372l2.876-2.257L16 21.943Z"
            ></path>
            <path
              fill="#ef6c00"
              d="M7.628 15.371a12.6 12.6 0 0 0-5.12-2.39l-.04.102a7.52 7.52 0 0 0 2.347 8.491l.015.012l.032.026l5.797 4.511l5.331-4.18Z"
            ></path>
          </svg>
          <span data-i18n="about.gitlabContributions">GitLab 贡献</span>
        </h3>
        <div class="calendar-container">
          <GitLabCalendar
            client:only="preact"
          />
        </div>
      </div>
    </div>

    <!-- 版权和资源说明 -->
    <div class="glass-container">
      <div class="section-content">
        <h2 class="section-title">
          <svg
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <circle cx="12" cy="12" r="10"></circle>
            <path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"></path>
            <path d="M12 17h.01"></path>
          </svg>
          <span data-i18n="about.copyrightStatement">版权声明</span>
        </h2>

        <div class="copyright-content">
          <p data-i18n="about.copyrightIntro">
            这里是我的个人Blog，用来记录日常的学习与生活、分享一些有趣的资源、
            写写周记什么的，并且之后会记录科研路上的思考与收获。
          </p>

          <p data-i18n="about.copyrightLicense">
            站点中的原创内容采用 <strong>CC BY-NC 4.0</strong> 协议进行分享， 欢迎你在非商业用途下自由转载和分享，只需标注一下来源就好。
            我觉得好的内容就应该被更多人看到，这样才有价值。
          </p>

          <p data-i18n="about.copyrightIcons">
            网站使用的图标资源来自 <a
              href="https://yesicon.app/"
              target="_blank"
              rel="noopener noreferrer"
              class="tech-link">YesIcon</a
            >， 感谢他们提供的优质图标库。如果你发现任何版权问题，
            请随时联系我，我会及时处理。
          </p>
        </div>
      </div>
    </div>

    <!-- 技术栈和资源 -->
    <div class="glass-container">
      <div class="section-content">
        <h2 class="section-title">
          <svg
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <polyline points="16 18 22 12 16 6"></polyline>
            <polyline points="8 6 2 12 8 18"></polyline>
          </svg>
          <span data-i18n="about.techStackAndResources">技术栈与资源</span>
        </h2>

        <div class="tech-content">
          <h3 data-i18n="about.frameworkAndTech">框架与技术</h3>
          <p data-i18n="about.frameworkDesc">
            本站基于 <a
              href="https://astro.build/"
              target="_blank"
              rel="noopener noreferrer"
              class="tech-link">Astro</a
            > 框架构建， 这是一个静态站点生成器。站点采用响应式设计， 支持多种前端技术栈的集成，包括
            <a
              href="https://react.dev/"
              target="_blank"
              rel="noopener noreferrer"
              class="tech-link">React</a
            >、<a
              href="https://preactjs.com/"
              target="_blank"
              rel="noopener noreferrer"
              class="tech-link">Preact</a
            > 等组件库。
          </p>

          <h3 data-i18n="about.designResources">设计资源</h3>
          <p data-i18n="about.designDesc">
            站点的UI组件和设计灵感主要参考了 <a
              href="https://reactbits.dev/"
              target="_blank"
              rel="noopener noreferrer"
              class="tech-link">React Bits</a
            >
            的优秀样式资源。
          </p>
        </div>
      </div>
    </div>
  </LoadingTransition>

  <style define:vars={{ skillColor, fontWeight, textCase }}>
    /* 页面特定样式 */
    .header-section {
      text-align: center;
      margin-bottom: 2rem;
    }

    .header-section h1 {
      font-size: 2.5rem;
      font-weight: 700;
      margin-bottom: 0.5rem;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    .subtitle {
      font-size: 1.1rem;
      color: #666;
      margin: 0;
      opacity: 0.8;
    }

    html.dark .subtitle {
      color: #ccc;
    }

    .content-sections {
      display: flex;
      flex-direction: column;
      gap: 1.5rem;
    }

    .glass-card {
      opacity: 0;
      animation: fadeInUp 0.6s ease-out forwards;
    }

    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .glass-card h2 {
      margin-top: 0;
      margin-bottom: 1rem;
      font-size: 1.3rem;
      color: var(--text-color);
    }

    .glass-card p {
      line-height: 1.6;
      color: var(--text-color);
      opacity: 0.9;
      margin-bottom: 1rem;
    }

    .hobbies,
    .skills {
      display: flex;
      flex-wrap: wrap;
      gap: 0.75rem;
    }

    .hobby-item,
    .skill-item {
      padding: 0.5rem 1rem;
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(16px);
      -webkit-backdrop-filter: blur(16px);
      border: 1px solid rgba(255, 255, 255, 0.2);
      border-radius: 9999px;
      color: var(--text-color);
      font-size: 0.9rem;
      font-weight: 500;
      transition: all 0.3s ease;
      opacity: 0;
      animation: fadeInScale 0.6s ease-out forwards;
    }

    html.dark .hobby-item,
    html.dark .skill-item {
      background: rgba(255, 255, 255, 0.05);
      border-color: rgba(255, 255, 255, 0.1);
    }

    .hobby-item:hover,
    .skill-item:hover {
      background: rgba(255, 255, 255, 0.15);
      border-color: rgba(255, 255, 255, 0.3);
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    html.dark .hobby-item:hover,
    html.dark .skill-item:hover {
      background: rgba(255, 255, 255, 0.08);
      border-color: rgba(255, 255, 255, 0.15);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    }

    .skill-item {
      color: var(--skillColor);
      font-weight: var(--fontWeight);
      text-transform: var(--textCase);
    }

    /* 代码贡献样式 */
    .contribution-intro {
      text-align: center;
      margin-bottom: 2rem;
      color: rgba(255, 255, 255, 0.7);
      font-style: italic;
    }

    /* 全宽贡献热力图容器 - 内容65%对齐 */
    .contributions-full-width {
      max-width: 65vw;
      margin: 3rem auto;
      padding: 0;
      position: relative;
      z-index: 1;
      background: transparent;
      overflow: visible;
      width: 100%;
      box-sizing: border-box;
    }

    /* 贡献热力图区域 */
    .contributions-section {
      margin-bottom: 3rem;
    }

    /* 统一的日历容器样式 */
    .calendar-container {
      display: flex;
      justify-content: center;
      align-items: center;
      width: 100%;
      overflow-x: auto;
      padding: 0 1rem;
    }

    .contributions-section h3 {
      display: flex;
      align-items: center;
      gap: 0.75rem;
      margin-bottom: 1rem;
      color: var(--text-color);
      font-size: 1.2rem;
      font-weight: 600;
    }

    .platform-icon {
      width: 20px;
      height: 20px;
    }

    .contributions-section:first-of-type .platform-icon {
      color: #667eea; /* GitHub 蓝色 */
    }

    .contributions-section:last-of-type .platform-icon {
      color: #fc6d26; /* GitLab 橙色 */
    }

    /* GitLab SVG 图标特殊样式 */
    .contributions-section:last-of-type .platform-icon path {
      fill: currentColor;
    }

    /* 热力图样式 - 确保可见性 */
    .github-calendar,
    .gitlab-calendar {
      color: rgba(255, 255, 255, 0.9);
      font-family: inherit;
      width: 100%;
      overflow-x: auto;
      position: relative;
      z-index: 2;
      min-height: 180px;
      display: block;
      visibility: visible;
    }

    /* 自定义 GitHub Calendar 样式 */
    :global(.github-calendar-custom) {
      width: 915px;
      max-width: 915px;
      font-family: inherit;
    }

    :global(.github-calendar-wrapper) {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
      align-items: center;
      width: 100%;
    }

    :global(.github-calendar-months) {
      display: grid;
      grid-template-columns: 20px repeat(53, 1fr);
      gap: 3px;
      font-size: 12px;
      font-weight: 600;
      color: rgba(255, 255, 255, 0.8);
      margin-bottom: 4px;
      width: 915px;
      max-width: 915px;
    }

    :global(.month-label) {
      text-align: left;
      font-size: 12px;
      font-weight: 600;
      padding-left: 2px;
    }

    :global(.github-calendar-content) {
      display: flex;
      gap: 0.5rem;
    }

    :global(.github-calendar-weeks) {
      display: flex;
      flex-direction: column;
      gap: 3px;
      width: 20px;
      font-size: 10px;
      color: rgba(255, 255, 255, 0.7);
      justify-content: space-around;
      height: 105px;
    }

    :global(.week-label) {
      height: 13px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 9px;
      text-align: center;
      line-height: 1;
    }

    /* GitHub日历头部样式 */
    :global(.github-calendar-header) {
      margin-bottom: 1rem;
      font-size: 14px;
      color: rgba(255, 255, 255, 0.9);
      text-align: center;
    }

    .statistics {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 1rem;
      width: 100%;
      margin: 2rem 0 1rem;
    }
    .stat-item {
      background: rgba(255, 255, 255, 0.08);
      border: 1px solid rgba(255, 255, 255, 0.15);
      border-radius: 12px;
      padding: 1rem 1.25rem;
      text-align: center;
      backdrop-filter: blur(12px);
    }
    .stat-icon {
      color: #667eea;
      margin-bottom: 0.5rem;
      display: flex;
      justify-content: center;
    }
    .stat-label {
      color: rgba(255, 255, 255, 0.7);
      font-size: 0.9rem;
      margin-bottom: 0.25rem;
    }
    .stat-value {
      color: #fff;
      font-size: 1.2rem;
      font-weight: 600;
    }
    .degree-progress {
      width: 100%;
      margin: 0 0 1.5rem;
    }
    .degree-info {
      display: flex;
      justify-content: space-between;
      margin-bottom: 0.5rem;
      color: rgba(255, 255, 255, 0.8);
    }
    .progress-bar {
      height: 10px;
      background: rgba(255, 255, 255, 0.1);
      border-radius: 999px;
      overflow: hidden;
    }
    .progress-fill {
      height: 100%;
      background: linear-gradient(90deg, #9be9a8, #216e39);
    }

    :global(.github-calendar-header) {
      text-align: center;
      margin-bottom: 1rem;
      color: rgba(255, 255, 255, 0.9);
      font-size: 14px;
    }

    :global(.github-calendar-grid) {
      display: grid;
      grid-template-columns: repeat(53, 1fr);
      gap: 3px;
      margin-bottom: 1rem;
      justify-content: center;
      width: 895px;
      max-width: 895px;
    }

    :global(.github-day) {
      width: 13px;
      height: 13px;
      border-radius: 2px;
      cursor: pointer;
      transition: all 0.2s ease;
    }

    :global(.github-day.level-0) {
      background: #d1d5db;
    }
    :global(.github-day.level-1) {
      background: #9be9a8;
    }
    :global(.github-day.level-2) {
      background: #40c463;
    }
    :global(.github-day.level-3) {
      background: #30a14e;
    }
    :global(.github-day.level-4) {
      background: #216e39;
    }

    :global(.github-day:hover) {
      transform: scale(1.2);
      box-shadow: 0 2px 8px rgba(102, 126, 234, 0.3);
    }

    :global(.github-calendar-legend) {
      display: flex;
      align-items: center;
      justify-content: left;
      gap: 0.5rem;
      font-size: 11px;
      color: rgba(255, 255, 255, 0.6);
    }

    :global(.legend-colors) {
      display: flex;
      gap: 2px;
    }

    :global(.legend-day) {
      width: 10px;
      height: 10px;
      border-radius: 2px;
    }

    :global(.legend-day.level-0) {
      background: #d1d5db;
    }
    :global(.legend-day.level-1) {
      background: #9be9a8;
    }
    :global(.legend-day.level-2) {
      background: #40c463;
    }
    :global(.legend-day.level-3) {
      background: #30a14e;
    }
    :global(.legend-day.level-4) {
      background: #216e39;
    }

    /* 暗色主题下的统计信息 */
    html.dark .stat-item {
      background: rgba(255, 255, 255, 0.05);
      border-color: rgba(255, 255, 255, 0.1);
    }

    html.dark .stat-icon {
      color: #8b9cf7;
    }

    /* 暗色主题下的无贡献日期 */
    html.dark :global(.github-day.level-0) {
      background: #374151;
    }

    html.dark :global(.legend-day.level-0) {
      background: #374151;
    }

    /* GitHub 统计网格布局 */
    .github-stats-grid {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 1rem;
      margin-bottom: 1.5rem;
    }

    .github-chart,
    .github-languages {
      padding: 1rem;
      background: rgba(255, 255, 255, 0.02);
      backdrop-filter: blur(10px);
      border: 1px solid rgba(255, 255, 255, 0.1);
      border-radius: 12px;
      overflow: hidden;
    }

    .github-chart img,
    .github-languages img,
    .github-streak img {
      width: 100%;
      height: auto;
      border-radius: 8px;
      transition: transform 0.3s ease;
    }

    .github-chart img:hover,
    .github-languages img:hover,
    .github-streak img:hover {
      transform: scale(1.02);
    }

    /* GitHub 连击统计 */
    .github-streak {
      padding: 1rem;
      background: rgba(255, 255, 255, 0.02);
      backdrop-filter: blur(10px);
      border: 1px solid rgba(255, 255, 255, 0.1);
      border-radius: 12px;
      overflow: hidden;
    }

    /* GitLab Calendar 样式 */
    .gitlab-calendar {
      position: relative;
    }

    .gitlab-heatmap {
      display: grid;
      grid-template-columns: repeat(53, 1fr);
      gap: 3px;
      margin-bottom: 1rem;
    }

    .gitlab-day {
      width: 12px;
      height: 12px;
      border-radius: 2px;
      background: rgba(252, 109, 38, 0.1);
      transition: all 0.2s ease;
      cursor: pointer;
    }

    .gitlab-day.level-0 {
      background: rgba(252, 109, 38, 0.1);
    }
    .gitlab-day.level-1 {
      background: rgba(252, 109, 38, 0.3);
    }
    .gitlab-day.level-2 {
      background: rgba(252, 109, 38, 0.5);
    }
    .gitlab-day.level-3 {
      background: rgba(252, 109, 38, 0.7);
    }
    .gitlab-day.level-4 {
      background: rgba(252, 109, 38, 0.9);
    }

    .gitlab-day:hover {
      transform: scale(1.2);
      box-shadow: 0 2px 8px rgba(252, 109, 38, 0.3);
    }

    .gitlab-footer {
      text-align: center;
      margin-top: 1rem;
    }

    .gitlab-footer a {
      color: #fc6d26;
      text-decoration: none;
      font-size: 0.9rem;
      font-weight: 500;
    }

    .gitlab-footer a:hover {
      text-decoration: underline;
    }

    /* GitLab 真实API组件样式 */
    :global(.gitlab-calendar-custom) {
      width: 855px;
      max-width: 855px;
      font-family: inherit;
    }

    :global(.gitlab-calendar-wrapper) {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
      align-items: center;
      width: 100%;
    }

    :global(.gitlab-calendar-months) {
      display: grid;
      grid-template-columns: 20px repeat(53, 1fr);
      gap: 3px;
      font-size: 12px;
      font-weight: 600;
      color: rgba(255, 255, 255, 0.8);
      margin-bottom: 4px;
      width: 855px;
      max-width: 855px;
    }

    :global(.gitlab-calendar-content) {
      display: flex;
      gap: 0.5rem;
      justify-content: center;
      align-items: flex-start;
    }

    :global(.gitlab-calendar-weeks) {
      display: flex;
      flex-direction: column;
      gap: 3px;
      width: 20px;
      font-size: 10px;
      color: rgba(255, 255, 255, 0.7);
      justify-content: space-around;
      height: 105px;
    }

    :global(.gitlab-calendar-grid) {
      display: grid;
      grid-template-columns: repeat(53, 1fr);
      gap: 3px;
      margin-bottom: 1rem;
      width: 835px;
      max-width: 835px;
    }

    /* GitLab 日历格子样式 */
    :global(.gitlab-day) {
      width: 12px;
      height: 12px;
      border-radius: 2px;
      background: rgba(252, 109, 38, 0.1);
      transition: all 0.2s ease;
      cursor: pointer;
    }

    :global(.gitlab-day.level-0) {
      background: rgba(252, 109, 38, 0.1);
    }
    :global(.gitlab-day.level-1) {
      background: rgba(252, 109, 38, 0.3);
    }
    :global(.gitlab-day.level-2) {
      background: rgba(252, 109, 38, 0.5);
    }
    :global(.gitlab-day.level-3) {
      background: rgba(252, 109, 38, 0.7);
    }
    :global(.gitlab-day.level-4) {
      background: rgba(252, 109, 38, 0.9);
    }

    :global(.gitlab-day:hover) {
      transform: scale(1.2);
      box-shadow: 0 2px 8px rgba(252, 109, 38, 0.3);
    }

    /* GitLab 日历头部样式 */
    :global(.gitlab-calendar-header) {
      margin-bottom: 1rem;
      font-size: 14px;
      color: rgba(255, 255, 255, 0.9);
      text-align: center;
    }

    /* GitLab 图例样式 */
    :global(.gitlab-calendar-legend) {
      display: flex;
      align-items: center;
      justify-content: left;
      gap: 0.5rem;
      font-size: 11px;
      color: rgba(255, 255, 255, 0.7);
    }

    :global(.gitlab-calendar-legend .legend-colors) {
      display: flex;
      gap: 3px;
    }

    :global(.gitlab-calendar-legend .legend-day) {
      width: 10px;
      height: 10px;
      border-radius: 2px;
    }

    :global(.gitlab-calendar-legend .legend-day.level-0) {
      background: rgba(252, 109, 38, 0.1);
    }
    :global(.gitlab-calendar-legend .legend-day.level-1) {
      background: rgba(252, 109, 38, 0.3);
    }
    :global(.gitlab-calendar-legend .legend-day.level-2) {
      background: rgba(252, 109, 38, 0.5);
    }
    :global(.gitlab-calendar-legend .legend-day.level-3) {
      background: rgba(252, 109, 38, 0.7);
    }
    :global(.gitlab-calendar-legend .legend-day.level-4) {
      background: rgba(252, 109, 38, 0.9);
    }

    /* GitLab 不可用提示样式 */
    :global(.gitlab-unavailable-message) {
      padding: 1.5rem;
      text-align: center;
      color: rgba(255, 255, 255, 0.6);
      background: rgba(252, 109, 38, 0.03);
      border: 1px solid rgba(252, 109, 38, 0.1);
      border-radius: 8px;
      font-size: 14px;
    }

    :global(.gitlab-unavailable-message p) {
      margin: 0;
      opacity: 0.8;
    }

    /* 版权和技术栈样式 */
    .copyright-content,
    .tech-content {
      line-height: 1.8;
      color: rgba(255, 255, 255, 0.9);
    }

    .copyright-content p,
    .tech-content p {
      margin-bottom: 1.5rem;
      text-align: justify;
    }

    .copyright-content strong {
      color: #667eea;
      font-weight: 600;
    }

    .tech-content h3 {
      color: #667eea;
      font-size: 1.2rem;
      font-weight: 600;
      margin: 2rem 0 1rem 0;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .tech-content h3:first-child {
      margin-top: 0;
    }

    .tech-link {
      color: rgba(255, 255, 255, 0.9);
      text-decoration: none;
      font-weight: 500;
      border-bottom: 1px solid rgba(255, 255, 255, 0.3);
      transition: all 0.3s ease;
    }

    .tech-link:hover {
      color: #8b9eff;
      border-bottom-color: rgba(139, 158, 255, 0.6);
      background: rgba(102, 126, 234, 0.1);
      padding: 2px 4px;
      border-radius: 4px;
      margin: -2px -4px;
    }

    .feature-list {
      list-style: none;
      padding: 0;
      margin: 1.5rem 0;
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
      gap: 0.8rem;
    }

    .feature-list li {
      background: rgba(255, 255, 255, 0.05);
      padding: 1rem 1.2rem;
      border-radius: 8px;
      border: 1px solid rgba(255, 255, 255, 0.1);
      transition: all 0.3s ease;
      font-size: 0.95rem;
    }

    .feature-list li:hover {
      background: rgba(255, 255, 255, 0.08);
      border-color: rgba(102, 126, 234, 0.3);
      transform: translateY(-2px);
    }

    .tech-note {
      background: rgba(102, 126, 234, 0.1);
      border: 1px solid rgba(102, 126, 234, 0.2);
      border-radius: 8px;
      padding: 1.2rem;
      margin-top: 2rem;
      font-style: italic;
      color: rgba(255, 255, 255, 0.8);
      text-align: center;
    }

    /* 响应式调整 */
    @media (max-width: 768px) {
      .feature-list {
        grid-template-columns: 1fr;
        gap: 0.6rem;
      }

      .feature-list li {
        padding: 0.8rem 1rem;
        font-size: 0.9rem;
      }

      .tech-content h3 {
        font-size: 1.1rem;
      }

      .copyright-content p,
      .tech-content p {
        font-size: 0.95rem;
      }
    }

    @keyframes fadeInScale {
      from {
        opacity: 0;
        transform: scale(0.8);
      }
      to {
        opacity: 1;
        transform: scale(1);
      }
    }

    /* 响应式设计 */
    @media (max-width: 768px) {
      .header-section h1 {
        font-size: 2rem;
      }

      .hobbies,
      .skills {
        gap: 0.5rem;
      }

      .hobby-item,
      .skill-item {
        font-size: 0.85rem;
        padding: 0.4rem 0.8rem;
      }

      .github-stats-grid {
        grid-template-columns: 1fr;
        gap: 1rem;
      }

      .contributions-full-width {
        padding: 0 1rem;
        margin: 2rem auto;
      }

      .gitlab-heatmap {
        grid-template-columns: repeat(26, 1fr);
        gap: 2px;
      }

      .gitlab-day,
      :global(.gitlab-day) {
        width: 8px;
        height: 8px;
      }

      :global(.gitlab-calendar-legend .legend-day) {
        width: 8px !important;
        height: 8px !important;
      }

      /* 移动端GitHub Calendar调整 */
      :global(.github-calendar-grid) {
        grid-template-columns: repeat(26, 1fr);
        gap: 2px;
      }

      :global(.github-day) {
        width: 8px !important;
        height: 8px !important;
      }

      :global(.legend-day) {
        width: 8px !important;
        height: 8px !important;
      }

      .platform-title {
        font-size: 1.2rem;
      }

      .platform-icon {
        width: 20px;
        height: 20px;
      }

      .gitlab-stats-grid {
        grid-template-columns: repeat(2, 1fr);
        gap: 1rem;
      }

      .gitlab-stat-card {
        padding: 1rem 0.75rem;
      }

      .gitlab-stat-card .stat-number {
        font-size: 1.5rem;
      }
    }

    /* 中等屏幕适配 */
    @media (max-width: 1024px) {
      .contributions-full-width {
        max-width: 100%;
        padding: 0 2rem;
      }
    }

    /* 小屏幕适配 */
    @media (max-width: 768px) {
      .contributions-full-width {
        max-width: 100%;
        padding: 0 1rem;
        margin: 2rem auto;
      }
    }

    :global(body) {
      background-color: transparent !important;
    }

    /* GitHub Calendar 基础样式 */
    :global(.calendar) {
      font-family: inherit;
      color: rgba(255, 255, 255, 0.9);
    }

    :global(.calendar .js-calendar-graph) {
      margin: 0;
    }

    :global(.calendar .js-calendar-graph-svg) {
      width: 100%;
      height: auto;
    }

    :global(.calendar .contrib-column) {
      fill: rgba(255, 255, 255, 0.1);
    }

    :global(.calendar .contrib-column:hover) {
      fill: rgba(102, 126, 234, 0.3);
    }

    :global(.calendar text) {
      fill: rgba(255, 255, 255, 0.7) !important;
      font-size: 11px;
    }
  </style>

  <script is:inline define:vars={{ totalWordCount }}>
    document.addEventListener("DOMContentLoaded", function () {
      // GitLab 热力图现在由组件处理

      // 显示博客字数统计（使用服务端计算的真实字数）
      function displayWordCount() {
        try {
          // 从服务端获取的真实字数
          const actualWords = totalWordCount;

          const element = document.getElementById("site-words");
          if (element) {
            if (actualWords > 0) {
              // 添加动画效果
              let currentCount = 0;
              const increment = actualWords / 50;
              const timer = setInterval(() => {
                currentCount += increment;
                if (currentCount >= actualWords) {
                  currentCount = actualWords;
                  clearInterval(timer);
                }
                element.textContent = `${Math.floor(currentCount).toLocaleString()}字`;
              }, 30);
            } else {
              element.textContent = "—";
            }
          }
        } catch (error) {
          console.error("显示字数失败:", error);
          const element = document.getElementById("site-words");
          if (element) {
            element.textContent = "—";
          }
        }
      }

      // 统计信息：字数（真实计算）、开发时间（运行计时）、最后更新
      // 最后更新时间将在下面的开发时间统计中设置

      // 延迟显示字数，避免阻塞页面加载
      setTimeout(displayWordCount, 500);

      // 在线时间累计功能 - 修改为开发环境运行时间统计
      const STORAGE_KEY = "blog_dev_time";
      const SESSION_KEY = "blog_dev_session_start";
      const LAST_UPDATE_KEY = "blog_last_update";

      // 初始化：从9小时开始计时（之前的开发时间）
      const INITIAL_HOURS = 9;
      let totalOnlineMinutes = parseInt(
        localStorage.getItem(STORAGE_KEY) || (INITIAL_HOURS * 60).toString(),
      );

      // 如果是第一次访问，设置初始值
      if (!localStorage.getItem(STORAGE_KEY)) {
        localStorage.setItem(STORAGE_KEY, (INITIAL_HOURS * 60).toString());
        totalOnlineMinutes = INITIAL_HOURS * 60;
      }

      // 记录本次开发会话开始时间
      let sessionStart = Date.now();
      sessionStorage.setItem(SESSION_KEY, sessionStart.toString());

      // 注意：不在页面加载时更新 LAST_UPDATE_KEY，避免“最后更新”总是显示当前时间

      function updateOnlineTime() {
        // 计算本次开发会话时间
        const currentSessionMinutes = Math.floor(
          (Date.now() - sessionStart) / (1000 * 60),
        );

        // 总开发时间 = 历史累计 + 本次会话
        const totalMinutes = totalOnlineMinutes + currentSessionMinutes;

        const days = Math.floor(totalMinutes / (24 * 60));
        const hours = Math.floor((totalMinutes % (24 * 60)) / 60);
        const minutes = totalMinutes % 60;

        const onlineTimeElement = document.getElementById("online-time");
        if (onlineTimeElement) {
          if (days > 0) {
            onlineTimeElement.textContent = `${days}天 ${hours}小时`;
          } else if (hours > 0) {
            onlineTimeElement.textContent = `${hours}小时 ${minutes}分钟`;
          } else {
            onlineTimeElement.textContent = `${minutes}分钟`;
          }
        }

        // 更新最后更新时间显示
        const lastUpdatedElement = document.getElementById("last-updated");
        if (lastUpdatedElement) {
          const savedLastUpdate = localStorage.getItem(LAST_UPDATE_KEY);
          if (savedLastUpdate) {
            lastUpdatedElement.textContent = savedLastUpdate;
          } else {
            // 如果没有保存的时间，使用当前时间
            const fallbackTime = new Date().toLocaleString("zh-CN", {
              year: "numeric",
              month: "2-digit",
              day: "2-digit",
              hour: "2-digit",
              minute: "2-digit",
              second: "2-digit",
              hour12: false,
            });
            lastUpdatedElement.textContent = fallbackTime;
            localStorage.setItem(LAST_UPDATE_KEY, fallbackTime);
          }
        }

        // 每分钟更新一次
        setTimeout(updateOnlineTime, 60000);
      }

      // 页面卸载时保存累计开发时间
      window.addEventListener("beforeunload", function () {
        const sessionMinutes = Math.floor(
          (Date.now() - sessionStart) / (1000 * 60),
        );
        const newTotal = totalOnlineMinutes + sessionMinutes;
        localStorage.setItem(STORAGE_KEY, newTotal.toString());

        // 更新最后更新时间
        const updateTime = new Date().toLocaleString("zh-CN", {
          year: "numeric",
          month: "2-digit",
          day: "2-digit",
          hour: "2-digit",
          minute: "2-digit",
          second: "2-digit",
          hour12: false,
        });
        localStorage.setItem(LAST_UPDATE_KEY, updateTime);
      });

      // 页面可见性变化时也保存（处理标签页切换等情况）
      document.addEventListener("visibilitychange", function () {
        if (document.hidden) {
          const sessionMinutes = Math.floor(
            (Date.now() - sessionStart) / (1000 * 60),
          );
          const newTotal = totalOnlineMinutes + sessionMinutes;
          localStorage.setItem(STORAGE_KEY, newTotal.toString());
          totalOnlineMinutes = newTotal;

          // 更新最后更新时间
          const updateTime = new Date().toLocaleString("zh-CN", {
            year: "numeric",
            month: "2-digit",
            day: "2-digit",
            hour: "2-digit",
            minute: "2-digit",
            second: "2-digit",
            hour12: false,
          });
          localStorage.setItem(LAST_UPDATE_KEY, updateTime);

          // 重置会话开始时间
          const newSessionStart = Date.now();
          sessionStorage.setItem(SESSION_KEY, newSessionStart.toString());
          sessionStart = newSessionStart;
        }
      });

      updateOnlineTime();

      // 今年进度（计算今年已过去的百分比）
      const now = new Date();
      const currentYear = now.getFullYear();
      const yearStart = new Date(currentYear, 0, 1).getTime(); // 今年1月1日
      const yearEnd = new Date(currentYear + 1, 0, 1).getTime(); // 明年1月1日
      const currentTime = now.getTime();

      const yearPercent = Math.max(
        0,
        Math.min(
          100,
          ((currentTime - yearStart) / (yearEnd - yearStart)) * 100,
        ),
      );

      const degreePercentElement = document.getElementById("degree-percent");
      const degreeFillElement = document.getElementById("degree-fill");
      if (degreePercentElement) {
        degreePercentElement.textContent = `${yearPercent.toFixed(1)}%`;
      }
      if (degreeFillElement) {
        degreeFillElement.style.width = `${yearPercent}%`;
      }
    });
  </script>

  <script>
    import "../utils/i18n-client.js";
  </script>
</BaseLayout>
