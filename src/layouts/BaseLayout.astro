---
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import ScrollProgress from "../components/ScrollProgress.jsx";
import "../styles/ScrollProgress.css";

export interface Props {
  pageTitle: string;
  isHomePage?: boolean;
  fullWidth?: boolean;
}

const { pageTitle, isHomePage = false, fullWidth = false } = Astro.props;
---

<html lang="zh-cn">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{pageTitle}</title>

    <!-- 立即应用主题，防止闪烁 -->
    <script is:inline>
      (function () {
        const getTheme = () => {
          if (typeof localStorage !== "undefined") {
            const stored = localStorage.getItem("theme");
            if (stored && ["dark", "light"].includes(stored)) {
              return stored;
            }
          }
          return window.matchMedia("(prefers-color-scheme: dark)").matches
            ? "dark"
            : "light";
        };

        const theme = getTheme();
        document.documentElement.classList.toggle("dark", theme === "dark");

        // 存储主题设置
        if (typeof localStorage !== "undefined") {
          localStorage.setItem("theme", theme);
        }
      })();
    </script>

    <!-- 预设样式防止闪烁 -->
    <style>
      /* Anti-flicker: only set text color initially */
      html {
        color: #333333;
      }
      html.dark {
        color: #e0e0e0;
      }
    </style>
  </head>
  <body class={isHomePage ? "home-page" : ""}>
    {!isHomePage && <ScrollProgress client:only="preact" />}
    <Header />
    <main class:list={{ "full-width": fullWidth }}>
      <slot />
    </main>
    <Footer />
  </body>
</html>

<style>
  :root {
    --bg-color: #ffffff;
    --text-color: #333333;
    --border-color: #dddddd;
    --card-bg: #fafafa;
  }

  html.dark {
    --bg-color: #1a1a1a;
    --text-color: #e0e0e0;
    --border-color: #333333;
    --card-bg: #2a2a2a;
  }

  html {
    font-family: sans-serif;
    color: var(--text-color);
  }

  body {
    /* Body must have background for backdrop-filter to work properly */
    background-color: var(--bg-color);
  }

  html.theme-transition {
    transition:
      background-color 0.3s ease,
      color 0.3s ease;
  }

  html.theme-transition * {
    transition:
      background-color 0.3s ease,
      color 0.3s ease,
      border-color 0.3s ease;
  }

  body {
    margin: 0;
    padding: 0;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    color: var(--text-color);
    position: relative;
    overflow-x: hidden; /* 防止光线造成水平滚动 */
  }

  main {
    flex: 1;
    padding: 0;
    max-width: none;
    margin: 0 auto;
    width: 100%;
  }

  main.full-width {
    max-width: none;
    padding: 0;
  }

  /* 只在需要时添加过渡效果 */
  .fade-in {
    animation: fadeIn 0.3s ease-out;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
